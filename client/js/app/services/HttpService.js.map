{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;IAAaA,W,WAAAA,W;;;;;;;sCAEKC,G,EAAK;AACf,gBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,mBAAOH,GAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AAEL,mBAAOC,MAAMD,GAAN,EACCE,IADD,CACM;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADN,EAECM,IAFD,CAEM;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFN,CAAP;AAGH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,mBAAOJ,MAAMD,GAAN,EAAU;AACbM,yBAAS,EAAC,gBAAiB,kBAAlB,EADI;AAEbC,wBAAQ,MAFK;AAGbC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHO,aAAV,EAKNH,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n    \n    get(url) {\n        \n        return fetch(url)\n               .then(res => this._handleErrors(res))\n               .then(res => res.json());\n    }\n    \n    post(url, dado) {\n\n        return fetch(url,{\n            headers: {'Content-type' : 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n    }\n}"]}